// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  password      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

//**************************
//Definición del modelo para la tabla Empleados
//***************************
// Definición del modelo para la tabla empleados
model Empleado {
  id              String  @id @default(cuid())
  legajo          Int     @unique
  Nombre_completo String
  telefono        Int?
  fecha_empleo    String
  direccion       String?
  ciudad          String?
  email           String? @unique
  Area            String
  Horario         Int
  Turno           Int

  Vehiculo Vehiculo[]
  // Índices
}

// Definición del modelo para la tabla vehiculos
model Vehiculo {
  id         String    @id @default(cuid())
  patente    String    @unique
  tipo       String
  marca      String
  modelo     String
  color      String
  empleadoId String
  Empleado   Empleado? @relation(fields: [empleadoId], references: [id])
}
